// Mixin and defaults for making buttons.

// Adapted from GOV.UK Elements: https://github.com/alphagov/govuk_frontend_toolkit/blob/master/stylesheets/design-patterns/_buttons.scss

// Example usage:

// .button{
//     @include button($green);
// }
// .button-secondary{
//     @include button($grey-3);
// }
// .button-warning{
//     @include button($red);
// }

@mixin button($colour) {
    font-family: "Frutiger W01";
    font-size: 20px;
    font-weight: 600;
    line-height: 32px;
    text-transform: none;
    -webkit-font-smoothing: antialiased;
    -webkit-appearance: none;
        -moz-appearance: none;
            appearance: none;
    background-color: $colour;
    border: 0;
    box-shadow: 0 2px 0 darken($colour, 15%);
    cursor: pointer;
    display: inline-block;
    letter-spacing: .5px;
    outline: 1px solid transparent; // keep some button appearance when changing colour settings in browsers
    outline-offset: -1px; // fixes bug in Safari that outline width on focus is not overwritten, is reset to 0 on focus in govuk_template
    padding: 12px 24px;
    position: relative;
    text-align: center;
    text-decoration: none;
    width: 100%;
    border-radius: 0;

    @media only screen and (min-width: 641px) { 
        width: auto;
    }

    + .button {
        margin-top: 16px;

        @media only screen and (min-width: 925px) {
        margin-left: 16px;
        margin-top: 0;
        }

        @media only screen and (min-width: 641px) {
        margin-left: 32px;
        }
    }

    &:visited {
        background-color: $colour;
    }

    &:focus {
        outline: 3px solid #ffb81c;
    }

    &:hover,
    &:focus {
        background-color: darken($colour, 5%);
    }

    &:active {
        box-shadow: 0 0 0 $colour;
        top: 2px;
    }

    // Disabled button styles
    &.disabled,
    &[disabled="disabled"],
    &[disabled] {
        opacity: .5;

        &:hover {
        background-color: $colour;
        cursor: default;
        }

        &:active {
        box-shadow: 0 2px 0 darken($colour, 15%);
        top: 0;
        }
    }
    
    // Set text colour depending on background colour
    @if lightness($colour) < 50% {
        color: #fff;

        &:link,
        &:hover,
        &:focus,
        &:visited {
            color: #fff;
        }
    } @else {
        color: #231f20;

        &:link,
        &:hover,
        &:focus,
        &:visited {
            color: #231f20;
        }
    }

    // making the click target bigger than the button
    // (and fill the space made when the button moves)
    &:before {
        background: transparent;
        content: "";
        display: block;
        height: 110%;
        left: 0;
        position: absolute;
        top: 0;
        width: 100%;
    }

    &:active:before {
        height: 120%;
        top: -10%;
    }
}
